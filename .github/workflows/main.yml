name: Build and Generate oneplayone-android apk

on:
  workflow_dispatch:

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Install NDK
        uses: nttld/setup-ndk@v1
        with: 
          ndk-version: r23c
          local-cache: true
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build NDK
        run: |
          git submodule update --init --recursive
          ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./app/src/main/jni/Android.mk NDK_APPLICATION_MK=./app/src/main/jni/Application.mk
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
    
      - name: Build debug apk
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: assembleDebug
          distributions-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
      
      - name: Upload debug apk
        uses: actions/upload-artifact@v3
        with:
          name: apk-debug
          path: ./app/build/outputs/apk
          
  get-android-build-version:
    name: Get android version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step_version.outputs.version }}
    steps:
      - id: step_version
        run: echo "::set-output name=version=$(./gradlew -q printVersionName)" 
      
  release-project: 
    name: Release Project
    runs-on: ubuntu-latest
    needs: build-apk
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: apk-debug
      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: apk-debug
      - name: Create Github Release
        id: create_new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ needs.get-android-build-version.outputs.version }}
          release_name: ${{ needs.get-android-build-version.outputs.version }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: apk-debug.zip
          asset_name: in.oneplay.app-v .zip
          asset_content_type: application/zip
